# Service deployment for chatbot application
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
spec:
  selector:
    app: {{ .Values.name }}
  ports:
  - name: backend
    port: {{ .Values.images.backend.env.port | default 5000 }} # Port exposed by the service
    targetPort: {{ .Values.images.backend.env.port | default 5000 }} # Port on the container to which the service routes traffic
    protocol: TCP    
---
# Ingress resource for chatbot application
# This resource defines how external traffic can access the chatbot service
# routes traffic to the backend service
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - {{ .Values.name }}.{{ .Values.domain }}
      secretName: {{ .Values.name }}.{{ .Values.domain }}-cert
  rules:
    - host: {{ .Values.name }}.{{ .Values.domain }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                 name: {{ .Values.name }}
                 port:
                   number: {{ .Values.images.backend.env.port | default 5000 }} # Port on the service to which the ingress routes traffic
---
# ConfigMap for chatbot application
# This ConfigMap contains the phone credential definition used by the chatbot application
# It is mounted as a volume in the StatefulSet
# The phone-cred-def-dev.json file is used to define the phone credential schema
# and is loaded into the application at runtime
# The ConfigMap is created from the file located at config/phone-cred-def-dev.json
# The file is indented to ensure proper formatting in the ConfigMap
# The name of the ConfigMap is defined in the values.yaml file under configMap.name
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.configMap.name }}
  namespace: {{ .Values.namespace }}
data:
  phone-cred-def-dev.json: |-
{{ .Files.Get "config/phone-cred-def-dev.json" | indent 4 }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
   name: {{ .Values.name }}
   namespace: {{ .Values.namespace }}
spec:
   serviceName: {{ .Values.name }}
   replicas: {{ .Values.replicas }}
   selector:
      matchLabels:
         app: {{ .Values.name }}
   template:
      metadata:
         labels:
            app: {{ .Values.name }}
      spec:
         containers:
         -  name: {{ .Values.name }}-backend-container
            image: "{{ .Values.images.backend.repository }}:{{ .Values.images.backend.tag }}"
            imagePullPolicy: Always
            env:
            # Base URL for the Agent Admin API
            - name: VS_AGENT_ADMIN_BASE_URL
              value: "{{ .Values.images.backend.env.vsAgentAdminUrl }}/v1"
            # Base URL for the Service API
            - name: PUBLIC_BASE_URL
              value: "https://{{ .Values.name }}.{{ .Values.domain }}"
            # Base URL for the Vision Service
            - name: VISION_SERVICE_BASE_URL
              value: "{{ .Values.images.backend.env.visionUrl }}"
            # Base URL for the WebRTC server
            - name: WEBRTC_SERVER_BASE_URL
              value: "{{ .Values.images.backend.env.webrtcUrl }}"
            ports:
            -  containerPort: {{ .Values.images.backend.env.port | default 5000 }}
            # Mount the ConfigMap as a volume to replace the phone-cred-def-dev.json file
            volumeMounts:
              - name: {{ .Values.name }}-cred-pv
                mountPath: /www/examples/chatbot/build/phone-cred-def-dev.json
                subPath: phone-cred-def-dev.json

         volumes:
         - name: {{ .Values.name }}-cred-pv
           configMap:
             name: {{ .Values.configMap.name }}


