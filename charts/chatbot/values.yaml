# This file contains the configuration values for the chatbot application deployment
# Global configuration for the chatbot application
global:
  domain: example.io # Domain for the chatbot application

# General configuration
name: chatbot-backend # Name of the chatbot backend service
replicas: 1 # Number of replicas for the chatbot backend service
ingress:
  host: '{{ .Values.name }}.{{ .Values.global.domain }}'
  tlsSecret: public.{{ .Values.name }}.{{ .Values.global.domain }}-cert
env:
  vsAgentAdminUrl: http://chatbot:3000 # URL for the VS Agent Admin API
  visionUrl: 'http://webrtc-pymediasoup-client.{{ .Values.global.domain }}' # URL for the Vision Service demo
  webrtcUrl: 'https://webrtc.{{ .Values.global.domain }}' # WebRTC server URL, used for video calls and media streaming
  port: 5000 # Port on which the chatbot backend service listens
resources:
  requests:
    cpu: 100m
    memory: 256Mi
  limits:
    cpu: 500m
    memory: 512Mi

# VS Agent Chart dependency configuration
# This section defines the configuration for the VS Agent chart that is used by the chatbot application
vs-agent-chart:
  enabled: false # Indicates whether the VS Agent chart is enabled
  name: chatbot # Name of the VS Agent chart
  didcommLabel: Chatbot Agent # Chatbot name to display on the invitation QR code
  eventsBaseUrl: http://chatbot-backend:5000 # Base URL for the chatbot backend service
  didcommInvitationImageUrl: https://image.{{ .Values.global.domain }}/avatar.png # Image for the chatbot invitation QR code
  ingress:
    host: '{{ .Values.name }}.{{ .Values.global.domain }}' # Host for the vs agent service
    tlsSecret: public.{{ .Values.name }}.{{ .Values.global.domain }}-cert # TLS secret for the vs agent service

  # Environment variables specific to the chatbot backend service
  extraEnv:
    - name: AGENT_WALLET_ID
      value: 'Chatbot Agent'
    - name: AGENT_WALLET_KEY
      value: 'Chatbot Agent'
